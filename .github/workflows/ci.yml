name: CI
'on':
  - pull_request
  - push
env:
  LANG: C
  UTIL_PHP_VERSION: '8.2'
jobs:
  phpSyntaxCheck:
    name: 'PHP Syntax Check (PHP ${{ matrix.env.php }})'
    strategy:
      matrix:
        env:
          -
            php: '8.2'
            experimental: false
          -
            php: '8.3'
            experimental: false
          -
            php: '8.4'
            experimental: false
          -
            php: '8.5'
            experimental: true
    runs-on: ubuntu-22.04
    steps:
      -
        uses: actions/checkout@v4
      -
        name: 'Set up PHP ${{ matrix.env.php }}'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.env.php }}'
      -
        name: 'Syntax check'
        continue-on-error: '${{ matrix.env.experimental }}'
        run: |
          find . \( -type d \( -name '.git' -or -name 'vendor' -or -name 'node_modules' -or -name 'runtime' \) -prune \) -or \( -type f -name '*.php' -print \) \
            | sort \
            | xargs ${{ matrix.php.version >= 8.3 && ' ' || '-n 1 '}}php -l
  makeComposerCache:
    name: 'Make composer cache'
    runs-on: ubuntu-22.04
    steps:
      -
        uses: actions/checkout@v4
      -
        name: 'Set up PHP ${{ env.UTIL_PHP_VERSION }}'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ env.UTIL_PHP_VERSION }}'
      -
        name: 'symlink composer'
        run: |
          ln -s `which composer` composer.phar
      -
        uses: actions/cache@v4
        with:
          path: |
            composer.phar
            vendor
            ~/.cache/composer/files
          key: "${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}"
          restore-keys: |
            ${{ runner.os }}-composer-
      -
        name: 'Install Composer dependencies'
        run: 'composer install --prefer-dist'
  phpcs:
    name: PHPCS
    runs-on: ubuntu-22.04
    needs: makeComposerCache
    steps:
      -
        uses: actions/checkout@v4
      -
        name: 'Set up PHP ${{ env.UTIL_PHP_VERSION }}'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ env.UTIL_PHP_VERSION }}'
      -
        uses: actions/cache@v4
        with:
          path: |
            composer.phar
            vendor
            ~/.cache/composer/files
          key: "${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}"
      -
        name: 'Run PHPCS'
        run: vendor/bin/phpcs
  phpstan:
    name: PHPStan
    runs-on: ubuntu-22.04
    needs: makeComposerCache
    steps:
      -
        uses: actions/checkout@v4
      -
        name: 'Set up PHP ${{ env.UTIL_PHP_VERSION }}'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ env.UTIL_PHP_VERSION }}'
      -
        uses: actions/cache@v4
        with:
          path: |
            composer.phar
            vendor
            ~/.cache/composer/files
          key: "${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}"
      -
        name: 'Run PHPStan'
        run: 'vendor/bin/phpstan analyse --memory-limit=1G'
